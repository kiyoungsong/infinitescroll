{"version":3,"sources":["api.js","App.js","useIntersectionObserver.js","index.js"],"names":["api","axios","create","baseURL","getMovies","page","get","params","limit","App","useState","loading","setLoading","target","setTarget","data","setData","setPage","firstMovie","a","movies","page_number","console","log","getMovie","idx","temp","non_duplidated_data","_","uniq","useEffect","root","onIntersect","threshold","rootMargin","observer","IntersectionObserver","observe","unobserve","useIntersectionObserver","isIntersecting","className","length","map","value","title","id","ref","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mNAEMA,E,OAAMC,EAAMC,OAAO,CAAEC,QAAS,0BAEvBC,EAAY,eAACC,EAAD,uDAAQ,EAAR,OACvBL,EAAIM,IAAI,oBAAqB,CAAEC,OAAQ,CAAEF,OAAMG,MAAO,O,OC8DzCC,MA7Df,WAAgB,IAAD,EACiBC,oBAAS,GAD1B,mBACNC,EADM,KACGC,EADH,OAEeF,mBAAS,MAFxB,mBAENG,EAFM,KAEEC,EAFF,OAGWJ,mBAAS,IAHpB,mBAGNK,EAHM,KAGAC,EAHA,OAIWN,mBAAS,GAJpB,mBAINL,EAJM,KAIAY,EAJA,KAMPC,EAAU,uCAAG,kCAAAC,EAAA,sEAEfP,GAAW,GAFI,SAOLR,IAPK,oBAIbW,KACEA,KAAQK,EALG,EAKHA,OAAQC,EALL,EAKKA,YAGpBL,EAAQI,GACRH,EAAQI,GATO,kDAWfC,QAAQC,IAAR,MAXe,yBAafX,GAAW,GAbI,6EAAH,qDAiBVY,EAAQ,uCAAG,WAAOC,GAAP,yBAAAN,EAAA,sEAKLf,EAAUqB,GALL,oBAEbV,KACEA,KAAQK,EAHG,EAGHA,OAAQC,EAHL,EAGKA,YAGdK,EANS,sBAMEX,GANF,YAMWK,IACtBO,EAAsBC,IAAEC,KAAKH,EAAM,SACvCV,EAAQW,GACRV,EAAQI,GATO,4CAAH,sDAwBd,OAZAS,qBAAU,WACRZ,MACC,ICzCkC,SAAC,GAMjC,IAAD,IALJa,YAKI,MALG,KAKH,EAJJlB,EAII,EAJJA,OACAmB,EAGI,EAHJA,YAGI,IAFJC,iBAEI,MAFQ,EAER,MADJC,kBACI,MADS,MACT,EACJJ,qBAAU,WACR,IAAMK,EAAW,IAAIC,qBAAqBJ,EAAa,CACrDD,OACAG,aACAD,cAEF,GAAKpB,EAIL,OADAsB,EAASE,QAAQxB,GACV,WACLsB,EAASG,UAAUzB,MAEpB,CAACA,EAAQkB,EAAMG,EAAYF,EAAaC,IDuB3CM,CAAwB,CACtB1B,SACAmB,YAAa,YAA0B,oBAAtBQ,iBAEZ7B,GAAWa,EAASnB,EAAO,MAKhC,sBAAKoC,UAAU,MAAf,UACE,yDAA4BpC,KAC5B,sBAAKoC,UAAU,YAAf,UACG1B,GACCA,EAAK2B,OAAS,GACd3B,EAAK4B,KAAI,SAACC,GAAD,OAAW,6BAAoBA,EAAMC,OAAjBD,EAAME,OACpCnC,GAAW,UACZ,qBAAKoC,IAAKjC,WEzDlBkC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.def0641e.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst api = axios.create({ baseURL: \"https://yts.mx/api/v2\" });\n\nexport const getMovies = (page = 1) =>\n  api.get(\"/list_movies.json\", { params: { page, limit: 50 } });\n","import React, { useState, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport _ from \"underscore\";\nimport { getMovies } from \"./api\";\nimport { useIntersectionObserver } from \"./useIntersectionObserver\";\n\nfunction App() {\n  const [loading, setLoading] = useState(true);\n  const [target, setTarget] = useState(null);\n  const [data, setData] = useState([]);\n  const [page, setPage] = useState(1);\n\n  const firstMovie = async () => {\n    try {\n      setLoading(true);\n      const {\n        data: {\n          data: { movies, page_number }\n        }\n      } = await getMovies();\n      setData(movies);\n      setPage(page_number);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const getMovie = async (idx) => {\n    const {\n      data: {\n        data: { movies, page_number }\n      }\n    } = await getMovies(idx);\n    const temp = [...data, ...movies];\n    var non_duplidated_data = _.uniq(temp, \"title\");\n    setData(non_duplidated_data);\n    setPage(page_number);\n  };\n\n  useEffect(() => {\n    firstMovie();\n  }, []);\n\n  useIntersectionObserver({\n    target,\n    onIntersect: ([{ isIntersecting }]) => {\n      if (isIntersecting) {\n        !loading && getMovie(page + 1);\n      }\n    }\n  });\n  return (\n    <div className=\"App\">\n      <h1>Infinite Movies / Page {page}</h1>\n      <div className=\"container\">\n        {data &&\n          data.length > 0 &&\n          data.map((value) => <h3 key={value.id}>{value.title}</h3>)}\n        {loading && \"loading\"}\n        <div ref={setTarget} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { useEffect } from \"react\";\n\nexport const useIntersectionObserver = ({\n  root = null,\n  target,\n  onIntersect,\n  threshold = 1.0,\n  rootMargin = \"0px\"\n}) => {\n  useEffect(() => {\n    const observer = new IntersectionObserver(onIntersect, {\n      root,\n      rootMargin,\n      threshold\n    });\n    if (!target) {\n      return;\n    }\n    observer.observe(target);\n    return () => {\n      observer.unobserve(target);\n    };\n  }, [target, root, rootMargin, onIntersect, threshold]);\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}